name: CI
on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Elixir and Erlang versions
        uses: erlef/setup-beam@v1
        id: setup-elixir
        with:
          version-type: strict
          version-file: .tool-versions

      - name: Restore the deps cache
        uses: actions/cache@v3
        id: deps-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ steps.setup-elixir.outputs.elixir-version }}-${{ steps.setup-elixir.outputs.otp-version }}-deps-mixlockhash-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.setup-elixir.outputs.elixir-version }}-${{ steps.setup-elixir.outputs.otp-version }}-deps-

      - name: Restore the _build cache
        uses: actions/cache@v3
        id: build-cache
        with:
          path: _build
          key: ${{ runner.os }}-${{ steps.setup-elixir.outputs.elixir-version }}-${{ steps.setup-elixir.outputs.otp-version }}-build-mixlockhash-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
              ${{ runner.os }}-${{ steps.setup-elixir.outputs.elixir-version }}-${{ steps.setup-elixir.outputs.otp-version }}-build-

      - name: Restore the dialyzer cache
        uses: actions/cache@v3
        id: dialyzer-cache
        with:
          path: dialyzer
          key: ${{ runner.os }}-${{ steps.setup-elixir.outputs.elixir-version }}-${{ steps.setup-elixir.outputs.otp-version }}-dialyzer
          restore-keys: |
            ${{ runner.os }}-${{ steps.setup-elixir.outputs.elixir-version }}-${{ steps.setup-elixir.outputs.otp-version }}-dialyzer

      - name: Run CI
        run: |
          mix ci
